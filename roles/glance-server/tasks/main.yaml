---

- name: ensure glance packages are installed
  action: apt pkg={{ item }}
  with_items:
    - glance
    - python-glanceclient

- name: make sure glance services are started
  action: service name={{ item }} state=started
  with_items:
    - glance-registry
    - glance-api

- name: template glance configs
  template: >
    src=etc/glance/{{ item }}
    dest=/etc/glance/{{ item }}
    owner=glance
    group=glance
    mode=0644
  with_items:
    - glance-registry.conf
    - glance-api.conf

# I never saw this created, but can't hurt.
- name: remove sqlite database
  file: path=/var/lib/glance/glance.sqlite state=absent

- name: create glance MySQL database
  mysql_db: name=glance state=present

- name: create glance MySQL accounts
  mysql_user: >
    name=glance
    host={{ item }}
    password={{ passwords.GLANCE_DBPASS }}
    priv=glance.*:ALL
  with_items:
    - "localhost"
    - "127.0.0.1"
    - "%"

- name: create glance database table
  shell: "su -s /bin/sh -c \"glance-manage db_sync\" glance"

- name: Create glance user
  keystone_user: >
    user="glance"
    password={{ passwords.GLANCE_PASS }}
    email={{ GLANCE_EMAIL }}
    tenant="service"
    token={{ tokens.ADMIN }}

- name: Add glance to admin role
  keystone_user: >
    user="glance"
    role="admin"
    tenant="service"
    token={{ tokens.ADMIN }}

- name: Create a service entry for the Image Service
  command: "keystone service-create --name=glance --type=image --description='OpenStack Image Service'"
  environment:
    OS_SERVICE_TOKEN: "{{ tokens.ADMIN }}"
    OS_SERVICE_ENDPOINT: "http://controller:35357/v2.0"

#endpointargs:
#  - "--service-id=$(keystone service-list | awk '/ identity / {print $2}') "
#  - "--publicurl=http://controller:5000/v2.0 "
#  - "--internalurl=http://controller:5000/v2.0 "
#  - "--adminurl=http://controller:35357/v2.0"

- name: Create a endpoint
  shell: "keystone endpoint-create --service-id=$(keystone service-list | awk '/ image / {print $2}') --publicurl=http://controller:9292 --internalurl=http://controller:9292 --adminurl=http://controller:9292"
  environment:
    OS_SERVICE_TOKEN: "{{ tokens.ADMIN }}"
    OS_SERVICE_ENDPOINT: "http://controller:35357/v2.0"

- name: restart glance services
  service: name={{ item }} state=restarted
  with_items:
    - glance-registry
    - glance-api

- name: wait for a few seconds for glance start up properly
  pause: seconds=10

- name: Put up test image
  glance_image: login_username=admin
                login_password={{ passwords.ADMIN_PASS }}
                login_tenant_name=admin
                name="cirros-0.3.2-x86_64"
                container_format=bare
                disk_format=qcow2
                state=present
                copy_from=http://cdn.download.cirros-cloud.net/0.3.2/cirros-0.3.2-x86_64-disk.img
