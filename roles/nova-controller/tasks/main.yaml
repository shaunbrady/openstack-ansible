---

- name: ensure nova packages are installed
  action: apt pkg={{ item }}
  with_items:
    - nova-api
    - nova-cert
    - nova-conductor
    - nova-consoleauth
    - nova-novncproxy
    - nova-scheduler
    - python-novaclient

- name: make sure nova services are started
  action: service name={{ item }} state=started
  with_items:
    - nova-api
    - nova-cert
    - nova-consoleauth
    - nova-scheduler
    - nova-conductor
    - nova-novncproxy

- name: template nova configs
  template: >
    src=etc/nova/{{ item }}
    dest=/etc/nova/{{ item }}
    owner=nova
    group=nova
    mode=0640
  with_items:
    - nova.conf

- name: remove sqlite database
  file: path=/var/lib/nova/nova.sqlite state=absent

- name: create nova MySQL database
  mysql_db: name=nova state=present

- name: create nova MySQL accounts
  mysql_user: >
    name=nova
    host={{ item }}
    password={{ passwords.NOVA_DBPASS }}
    priv=nova.*:ALL
  with_items:
    - "localhost"
    - "127.0.0.1"
    - "%"

- name: create nova database table
  shell: "su -s /bin/sh -c \"nova-manage db sync\" nova"

- name: Create nova user
  keystone_user: >
    user="nova"
    password={{ passwords.NOVA_PASS }}
    email={{ NOVA_EMAIL }}
    tenant="service"
    token={{ tokens.ADMIN }}

- name: Add nova to admin role
  keystone_user: >
    user="nova"
    role="admin"
    tenant="service"
    token={{ tokens.ADMIN }}

- name: Create a service entry for the Compute Service
  command: "keystone service-create --name=nova --type=compute --description='OpenStack Compute'"
  environment:
    OS_SERVICE_TOKEN: "{{ tokens.ADMIN }}"
    OS_SERVICE_ENDPOINT: "http://controller:35357/v2.0"

#endpointargs:
#  - "--service-id=$(keystone service-list | awk '/ identity / {print $2}') "
#  - "--publicurl=http://controller:5000/v2.0 "
#  - "--internalurl=http://controller:5000/v2.0 "
#  - "--adminurl=http://controller:35357/v2.0"

- name: Create a endpoint
  shell: "keystone endpoint-create --service-id=$(keystone service-list | awk '/ compute / {print $2}') --publicurl=http://controller:8774/v2/%\\(tenant_id\\)s --internalurl=http://controller:8774/v2/%\\(tenant_id\\)s --adminurl=http://controller:774/v2/%\\(tenant_id\\)s"
  environment:
    OS_SERVICE_TOKEN: "{{ tokens.ADMIN }}"
    OS_SERVICE_ENDPOINT: "http://controller:35357/v2.0"

- name: restart nova services
  service: name={{ item }} state=restarted
  with_items:
    - nova-api
    - nova-cert
    - nova-consoleauth
    - nova-scheduler
    - nova-conductor
    - nova-novncproxy

# Note as of now, we don't catch the private part
- name: demo keypair gen
  nova_keypair: >
    state=present
    login_username=demo
    login_password={{ passwords.DEMO_PASS }}
    login_tenant_name=demo
    name=demo-key
